¬ архиве одна задача - task-Docs. ”словие можно прочитать в соответствующих txt файлах. ¬ам нужно дописать работающий код и послать решение на dkosolobov@gmail.com, а также отметить, что вы выслали решение в опроснике doodle.com/poll/a5qte4n85dtbhgg6 (на случай, если письмо затер€етс€). «адание содержит какие-то несложные первоначальные тесты в функции Main, чтобы отловить элементарные баги. –ешение должно проходить эти тесты. “ем не менее, решение, проход€щее тесты, может быть не прин€то в следующих случа€х:
1) решение не проходит какой-то другой несложный тест, не включЄнный в первоначальные тесты;
2) потребл€ема€ решением пам€ть не соответствует требуемой в задаче;
3) асимптотическое врем€ работы решени€ не соответствует требуемому в задаче.

ќптимизаци€ быстродействи€ - это нетривиальна€ техническа€ задача, далеко не всегда напр€мую св€занна€ с асимптотикой (в основном сводитс€ к оптимизации доступа к кеш лини€м), и обсуждение таких оптимизаций - хоть и очень интересно, но не €вл€етс€ частью данного курса. ѕоэтому € решил не измер€ть быстродействие, а смотреть на асимптотику самого решени€. “ут есть подводные камни: LINQ может случайно сделать линейный алгоритм квадратичным, если вы не знаете как LINQ работает, а Dictionary и HashSet имеют теоретическое врем€ выполнени€ O(n), а не O(1). «аметьте, € не призываю отказатьс€ от Dictionary и HashSet в обычной практике - это хорошие хеш таблицы, обычно превосход€щие SortedDictionary и SortedSet по скорости - но в рамках этого курса хочетс€ видеть, что вы понимаете, что такое асимптотика, и можете добитьс€ гарантированного времени выполнени€, когда это требуетс€.
